{"version":3,"sources":["main.js"],"names":["console","log","dat","raycaster","THREE","Raycaster","scene","Scene","camera","PerspectiveCamera","innerWidth","innerHeight","renderer","WebGLRenderer","setSize","setPixelRatio","devicePixelRatio","generatePlane","planeMesh","geometry","dispose","PlaneGeometry","world","plane","width","height","widthSegments","heightSegments","array","attributes","position","randomValues","i","length","x","y","z","Math","random","push","PI","originalPosition","colors","count","setAttribute","BufferAttribute","Float32Array","gui","GUI","add","onChange","document","body","appendChild","domElement","OrbitControls","planeGeometry","planeMaterial","MeshPhongMaterial","side","DoubleSide","flatShading","FlatShading","vertexColors","Mesh","light","DirectionalLight","set","backlight","mouse","undefined","frame","animate","requestAnimationFrame","render","setFromCamera","cos","sin","needsUpdate","intersects","intersectObject","color","object","setX","face","a","setY","b","setZ","c","initialColor","r","g","hoverColor","gsap","to","duration","onUpdate","addEventListener","event","clientX","clientY"],"mappings":"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","file":"main.1f19ae8e.js","sourceRoot":"..","sourcesContent":["\n\nconsole.log('hello');\nconsole.log(dat);\n\nconst raycaster = new THREE.Raycaster()\nconst scene = new THREE.Scene()\nconst camera = new THREE.PerspectiveCamera(\n    75,\n    innerWidth / innerHeight,\n    0.1,\n    1000\n)\nconst renderer = new THREE.WebGLRenderer()\n\n\nrenderer.setSize(innerWidth, innerHeight)\nrenderer.setPixelRatio(devicePixelRatio)\n\nfunction generatePlane() {\n    planeMesh.geometry.dispose()\n    planeMesh.geometry = new THREE.PlaneGeometry(\n        world.plane.width,\n        world.plane.height,\n        world.plane.widthSegments,\n        world.plane.heightSegments\n    )\n\n    // vertices position randomization\n    const { array } = planeMesh.geometry.attributes.position\n    const randomValues = []\n    for (let i = 0; i < array.length; i++) {\n        if (i % 3 === 0) {\n            const x = array[i]\n            const y = array[i + 1]\n            const z = array[i + 2]\n\n            array[i] = x + (Math.random() - 0.5) * 3\n            array[i + 1] = y + (Math.random() - 0.5) * 3\n            array[i + 2] = z + Math.random() * 3\n        }\n        randomValues.push(Math.random() * Math.PI * 2)\n    }\n\n    planeMesh.geometry.attributes.position.randomValues = randomValues\n    planeMesh.geometry.attributes.position.originalPosition =\n        planeMesh.geometry.attributes.position.array\n\n    // color attribute addition\n    const colors = []\n    for (let i = 0; i < planeMesh.geometry.attributes.position.count; i++) {\n        colors.push(0, 0.19, 0.4)\n    }\n\n    planeMesh.geometry.setAttribute('color',\n        new THREE.BufferAttribute(new Float32Array(colors), 3)\n    )\n}\n\nconst gui = new dat.GUI()\nconst world = {\n    plane: {\n        width: 400,\n        height: 400,\n        widthSegments: 50,\n        heightSegments: 50\n    }\n}\n\ngui.add(world.plane, 'width', 1, 500).onChange(generatePlane)\ngui.add(world.plane, 'height', 1, 500).onChange(generatePlane)\ngui.add(world.plane, 'widthSegments', 1, 100).onChange(generatePlane)\ngui.add(world.plane, 'heightSegments', 1, 100).onChange(generatePlane)\n\ndocument.body.appendChild(renderer.domElement)\n\nnew OrbitControls(camera, renderer.domElement)\n// const boxGeometry = new THREE.BoxGeometry(1, 1, 1)\n// const material = new THREE.MeshBasicMaterial({color: 0x00FF00})\n// const mesh = new THREE.Mesh(boxGeometry, material)\n// scene.add(mesh)\n\ncamera.position.z = 50\n\nconst planeGeometry = new THREE.PlaneGeometry(\n    world.plane.width,\n    world.plane.height,\n    world.plane.widthSegments,\n    world.plane.heightSegments)\n\nconst planeMaterial = new THREE.MeshPhongMaterial({\n    // color: 0xff0000,\n    side: THREE.DoubleSide,\n    flatShading: THREE.FlatShading,\n    vertexColors: true\n})\nconst planeMesh = new THREE.Mesh(planeGeometry, planeMaterial)\nscene.add(planeMesh)\ngeneratePlane()\n\n\nconst light = new THREE.DirectionalLight(0xffffff, 1)\nlight.position.set(0, -1, 1)\nscene.add(light)\n\nconst backlight = new THREE.DirectionalLight(0xffffff, 1)\nbacklight.position.set(0, 0, -1)\nscene.add(backlight)\n\nconst mouse = {\n    x: undefined,\n    y: undefined\n}\n\nlet frame = 0\nfunction animate() {\n    requestAnimationFrame(animate)\n    renderer.render(scene, camera)\n    raycaster.setFromCamera(mouse, camera)\n    frame += 0.01\n\n    const {\n        array,\n        originalPosition,\n        randomValues\n    } = planeMesh.geometry.attributes.position\n    for (let i = 0; i < array.length; i += 3) {\n        // x\n        array[i] = originalPosition[i] +\n            Math.cos(frame + randomValues[i]) * 0.01\n\n        // y\n        array[i + 1] = originalPosition[i + 1] +\n            Math.sin(frame + randomValues[i + 1]) * 0.001\n    }\n\n    planeMesh.geometry.attributes.position.needsUpdate = true\n\n    const intersects = raycaster.intersectObject(planeMesh)\n    if (intersects.length > 0) {\n        const { color } = intersects[0].object.geometry.attributes\n\n        // vertices 1\n        color.setX(intersects[0].face.a, 0.1)\n        color.setY(intersects[0].face.b, 0.5)\n        color.setZ(intersects[0].face.b, 1)\n\n        // vertices 2\n        color.setX(intersects[0].face.c, 0.1)\n        color.setY(intersects[0].face.c, 0.5)\n        color.setZ(intersects[0].face.c, 1)\n\n        // vertices 3\n        color.setX(intersects[0].face.c, 0.1)\n        color.setY(intersects[0].face.c, 0.5)\n        color.setZ(intersects[0].face.c, 1)\n\n        color.needsUpdate = true\n        // changes back to original color\n        const initialColor = {\n            r: 0,\n            g: 0.19,\n            b: 0.4\n        }\n\n        const hoverColor = {\n            r: 0.1,\n            g: 0.5,\n            b: 1\n        }\n        gsap.to(hoverColor, {\n            r: initialColor.r,\n            g: initialColor.g,\n            b: initialColor.b,\n            duration: 1,\n            onUpdate: () => {\n                // vertices 1\n                color.setX(intersects[0].face.a, hoverColor.r)\n                color.setY(intersects[0].face.a, hoverColor.g)\n                color.setZ(intersects[0].face.a, hoverColor.b)\n\n                // vertices 2\n                color.setX(intersects[0].face.b, hoverColor.r)\n                color.setY(intersects[0].face.b, hoverColor.g)\n                color.setZ(intersects[0].face.b, hoverColor.b)\n\n                // vertices 3\n                color.setX(intersects[0].face.c, hoverColor.r)\n                color.setY(intersects[0].face.c, hoverColor.g)\n                color.setZ(intersects[0].face.c, hoverColor.b)\n                color.needsUpdate = true\n\n            }\n        })\n    }\n    // mesh.rotation.x += 0.01\n    // mesh.rotation.y += 0.01\n    // planeMesh.rotation.x += 0.01\n\n}\n\nrenderer.render(scene, camera)\n\nanimate()\naddEventListener('mousemove', (event) => {\n    mouse.x = (event.clientX / innerWidth) * 2 - 1\n    mouse.y = -(event.clientY / innerHeight) * 2 + 1\n})\n"]}